'use strict';

var b=/([\p{Ll}\d])(\p{Lu})/gu,S=/(\p{Lu})([\p{Lu}][\p{Ll}])/gu,$=/(\d)\p{Ll}|(\p{L})\d/u,E=/[^\p{L}\d]+/giu,g="$1\0$2",x="";function T(t){let e=t.trim();e=e.replace(b,g).replace(S,g),e=e.replace(E,"\0");let r=0,s=e.length;for(;e.charAt(r)==="\0";)r++;if(r===s)return [];for(;e.charAt(s-1)==="\0";)s--;return e.slice(r,s).split(/\0/g)}function L(t){let e=T(t);for(let r=0;r<e.length;r++){let s=e[r],n=$.exec(s);if(n){let i=n.index+(n[1]??n[2]).length;e.splice(r,1,s.slice(0,i),s.slice(i));}}return e}function p(t,e){let[r,s,n]=F(t,e),i=j(e?.locale),a=_(e?.locale),o=e?.mergeAmbiguousCharacters?k(i,a):A(i,a);return r+s.map((l,c)=>c===0?i(l):o(l,c)).join(e?.delimiter??"")+n}function j(t){return t===!1?e=>e.toLowerCase():e=>e.toLocaleLowerCase(t)}function _(t){return t===!1?e=>e.toUpperCase():e=>e.toLocaleUpperCase(t)}function k(t,e){return r=>`${e(r[0])}${t(r.slice(1))}`}function A(t,e){return (r,s)=>{let n=r[0];return (s>0&&n>="0"&&n<="9"?"_"+n:e(n))+t(r.slice(1))}}function F(t,e={}){let r=e.split??(e.separateNumbers?L:T),s=e.prefixCharacters??x,n=e.suffixCharacters??x,i=0,a=t.length;for(;i<t.length;){let o=t.charAt(i);if(!s.includes(o))break;i++;}for(;a>i;){let o=a-1,l=t.charAt(o);if(!n.includes(l))break;a=o;}return [t.slice(0,i),r(t.slice(i,a)),t.slice(a)]}var w=t=>t.endsWith("-")?t:`${t}-`,y=(t,e,r)=>{let s=e.length-1;for(let n=0;n<s;++n){let i=p(e[n]);i in t||(t[i]={}),t=t[i];}e[s]==="DEFAULT"?t[e[s]]=r:t[p(e[s])]=r;},f=(t,e)=>t===void 0?e:t,C=(t,e,r)=>{let s=" ".repeat(e);return r!=="all"?t:s+t},d=(t,e,r=4)=>t.replace(/"(\\[^]|[^\\"])*"\s*:?/g,n=>/[0-9]/.test(n)&&/[a-zA-Z]/.test(n)?n:/:$/.test(n)?C(n.replace(/^"|"(?=\s*:$)/g,""),r,e):n).replace(/}/g,n=>C(n,r,e)),h=(t,e,r,s,n,i)=>{let a=n?`theme: {
    extend: ${d(e,t,4)},
  },`:`theme: ${d(e,t,2)},`;return `/** @type {import('tailwindcss').Config} */
module.exports = ${(()=>{let c=`{
  mode: "jit",
  content: [${s}],
  darkMode: "${r}",
  ${a}`;return i.length>0&&(c+=`
  plugins: [${i}]`),c+=`
}`,c})()}`};var P=(t,e,r,s)=>{let n=t.reduce((a,o)=>{if(o.attributes===void 0)throw new Error(`Token ${o.name} has no attributes`);return (o.attributes.category===e||e==="all")&&(r&&o.attributes.category!=="screens"?a[Object.values(o.attributes).join(".")]=s?`var(--${w(s)+o.name})`:`var(--${o.name})`:a[Object.values(o.attributes).join(".")]=o.$value||o.value),a},{}),i={};return Object.keys(n).forEach(a=>{let o=a.split(".").filter(l=>l!==e);y(i,o,n[a]);}),JSON.stringify(i,null,2)},R=({dictionary:{allTokens:t},type:e,isVariables:r,prefix:s,extend:n,tailwind:i})=>{let a=P(t,e,r,s);if(e==="all"){let o=f(i?.darkMode,"class"),l=f(Array.isArray(i?.content)?i?.content.map(u=>`"${u}"`):i?.content,['"./src/**/*.{ts,tsx}"']),c=f(i?.plugins?.map(u=>`require("@tailwindcss/${u}")`),[]);return h(e,a,o,l,n,c)}else return `module.exports = ${d(a)}`},M=({type:t,formatType:e="js",isVariables:r=!1,extend:s=!0,source:n,transforms:i,buildPath:a,prefix:o,tailwind:l,preprocessors:c})=>{if(t===void 0)throw new Error("type is required");if(e!=="js"&&e!=="cjs")throw new Error('formatType must be "js" or "cjs"');let m=t!=="all"?`${t}.tailwind.${e}`:`tailwind.config.${e}`;return {preprocessors:c,source:f(n,["tokens/**/*.json"]),hooks:{formats:{tailwindFormat:({dictionary:u})=>R({dictionary:u,formatType:e,isVariables:r,extend:s,prefix:o,type:t,tailwind:l})}},platforms:{[t!=="all"?`tailwind/${t}`:"tailwind"]:{transforms:f(i,["attribute/cti","name/kebab"]),buildPath:f(a,"build/web/"),files:[{destination:m,format:"tailwindFormat"}]}}}};

exports.getTailwindFormat = R;
exports.makeSdTailwindConfig = M;
